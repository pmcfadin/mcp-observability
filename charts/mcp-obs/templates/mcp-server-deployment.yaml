apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcp-obs.fullname" . }}-server
  labels:
    {{- include "mcp-obs.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "mcp-obs.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        {{- include "mcp-obs.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mcp-server
    spec:
      containers:
        - name: server
          image: "{{ .Values.mcpServer.image.repository }}:{{ .Values.mcpServer.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          {{- if .Values.tls.enabled }}
          volumeMounts:
            - name: tls
              mountPath: /certs
              readOnly: true
          args:
            - "uvicorn"
            - "app.main:app"
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "8000"
            - "--ssl-keyfile"
            - "/certs/tls.key"
            - "--ssl-certfile"
            - "/certs/tls.crt"
          {{- end }}
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://{{ include "mcp-obs.fullname" . }}-otel-collector:4318"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        {{- if .Values.mcpServer.persistence.enabled }}
        - name: mcp-storage
          persistentVolumeClaim:
            claimName: {{ include "mcp-obs.fullname" . }}-server-pvc
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: tls
          secret:
            secretName: {{ .Values.tls.secretName }}
        {{- end }} 